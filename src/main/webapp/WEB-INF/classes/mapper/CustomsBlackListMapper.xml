<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.smm.cuohe.dao.CustomsBlackListMapper" >
  <resultMap id="BaseResultMap" type="com.smm.cuohe.domain.CustomsBlackList" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="customerID" property="customerid" jdbcType="INTEGER" />
    <result column="blackCustomerID" property="blackcustomerid" jdbcType="INTEGER" />
    <result column="updatedAt" property="updatedat" jdbcType="TIMESTAMP" />
    <result column="createdAt" property="createdat" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createdBy" property="createdby" jdbcType="INTEGER" />
    <result column="updatedBy" property="updatedby" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, customerID, blackCustomerID, updatedAt, createdAt, status, createdBy, updatedBy
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ch_customs_blacklist
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ch_customs_blacklist
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.smm.cuohe.domain.CustomsBlackList" useGeneratedKeys="true" keyProperty="id">
    insert into ch_customs_blacklist (id, customerID, blackCustomerID, 
      updatedAt, createdAt, status, 
      createdBy, updatedBy)
    values (#{id,jdbcType=INTEGER}, #{customerid,jdbcType=INTEGER}, #{blackcustomerid,jdbcType=INTEGER}, 
      #{updatedat,jdbcType=TIMESTAMP}, #{createdat,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{createdby,jdbcType=INTEGER}, #{updatedby,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.smm.cuohe.domain.CustomsBlackList" >
    insert into ch_customs_blacklist
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="customerid != null" >
        customerID,
      </if>
      <if test="blackcustomerid != null" >
        blackCustomerID,
      </if>
      <if test="updatedat != null" >
        updatedAt,
      </if>
      <if test="createdat != null" >
        createdAt,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdby != null" >
        createdBy,
      </if>
      <if test="updatedby != null" >
        updatedBy,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="customerid != null" >
        #{customerid,jdbcType=INTEGER},
      </if>
      <if test="blackcustomerid != null" >
        #{blackcustomerid,jdbcType=INTEGER},
      </if>
      <if test="updatedat != null" >
        #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="createdat != null" >
        #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createdby != null" >
        #{createdby,jdbcType=INTEGER},
      </if>
      <if test="updatedby != null" >
        #{updatedby,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.smm.cuohe.domain.CustomsBlackList" >
    update ch_customs_blacklist
    <set >
      <if test="customerid != null" >
        customerID = #{customerid,jdbcType=INTEGER},
      </if>
      <if test="blackcustomerid != null" >
        blackCustomerID = #{blackcustomerid,jdbcType=INTEGER},
      </if>
      <if test="updatedat != null" >
        updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      </if>
      <if test="createdat != null" >
        createdAt = #{createdat,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createdby != null" >
        createdBy = #{createdby,jdbcType=INTEGER},
      </if>
      <if test="updatedby != null" >
        updatedBy = #{updatedby,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smm.cuohe.domain.CustomsBlackList" >
    update ch_customs_blacklist
    set customerID = #{customerid,jdbcType=INTEGER},
      blackCustomerID = #{blackcustomerid,jdbcType=INTEGER},
      updatedAt = #{updatedat,jdbcType=TIMESTAMP},
      createdAt = #{createdat,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      createdBy = #{createdby,jdbcType=INTEGER},
      updatedBy = #{updatedby,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="queryBlackList" resultType="com.smm.cuohe.domain.CustomsBlackListDto" parameterType="java.lang.Integer" >
		   SELECT
			black.id AS id,
			black.customerID AS customerid,
			black.blackCustomerID AS blackcustomerid,
			cu.companyName AS blackCompanyName,
			cu.entTypes AS entTypeCode,
			cu.salesVolume AS salesVolume,
			cu.buybrand AS buybrand,
			con.`name` AS contacterName,
			con.mobilePhone AS contacterPhone,
			u.`name` AS createName,
			black.createdAt AS createTime
		FROM
			ch_customs_blacklist AS black
		LEFT JOIN ch_customs AS cu ON black.blackCustomerID = cu.id
		LEFT JOIN ch_users AS u ON u.id = black.createdBy
		LEFT JOIN ch_contacter AS con ON con.customerId = black.blackCustomerID
		AND con.keyPerson = 1
		AND con.`status` = 0
		WHERE
			black.customerID = #{customerid,jdbcType=INTEGER} AND black.`status` = 0 GROUP BY black.id
  </select>
  
  <select id="queryBlackListById" resultType="com.smm.cuohe.domain.CustomsBlackListDto" parameterType="java.lang.Integer" >
		   SELECT
			black.id AS id,
			black.customerID AS customerid,
			black.blackCustomerID AS blackcustomerid,
			cu.companyName AS blackCompanyName,
			cu.entTypes AS entTypeCode,
			cu.salesVolume AS salesVolume,
			cu.buybrand AS buybrand,
			con.`name` AS contacterName,
			con.mobilePhone AS contacterPhone,
			u.`name` AS createName,
			black.createdAt AS createTime
		FROM
			ch_customs_blacklist AS black
		LEFT JOIN ch_customs AS cu ON black.blackCustomerID = cu.id
		LEFT JOIN ch_users AS u ON u.id = black.createdBy
		LEFT JOIN ch_contacter AS con ON con.customerId = black.blackCustomerID
		AND con.keyPerson = 1
		AND con.`status` = 0
		WHERE
			black.id = #{id,jdbcType=INTEGER} AND black.`status` = 0 GROUP BY black.id
  </select>
  
  <update id="deleteBlackListById" parameterType="java.lang.Integer" >
  update ch_customs_blacklist set status = 1 where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="getEntTypesByCode" parameterType="com.smm.cuohe.domain.CustomsBlackListDto" resultType="java.lang.String">
    SELECT getCategoryNameById(#{entTypeCode,jdbcType=VARCHAR}) as entTypes 
  </select>
  
   <select id="checkBlack" parameterType="com.smm.cuohe.domain.CustomsBlackListDto" resultType="java.lang.Integer">
    SELECT count(id) from ch_customs_blacklist where customerID = #{customerid,jdbcType=INTEGER} and blackCustomerID = #{blackcustomerid,jdbcType=INTEGER} and `status` = 0
  </select>
  
  <select id="checkBlacklist" parameterType="java.util.HashMap" resultMap="BaseResultMap">
  	
  	SELECT * FROM ch_customs_blacklist
  	
  	where customerID = #{customerID}
  	
  	and blackCustomerID = #{blackCustomerID}
  	
  	and status = 0
  
  </select>
  
</mapper>