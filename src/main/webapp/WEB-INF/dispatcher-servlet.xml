<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/util 
            http://www.springframework.org/schema/util/spring-util-4.0.xsd
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd  
            http://www.springframework.org/schema/aop   
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            " default-lazy-init="true">


	<!-- 默认扫描的包路径 -->
	<context:component-scan base-package="com.smm.cuohe.*" />
	<!-- aop配置 -->
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<bean name="aopControllerLog" class="com.smm.cuohe.aop.AopControllerLog"></bean>
	<!-- 启动后执行 -->
    <bean name="jobTask" class="com.smm.cuohe.task.DataSourceTask"></bean>
	<!-- 引入配置文件 -->
	<util:properties id="ch" location="classpath:config.properties"></util:properties>
	
	
	<!-- 用于将对象转换为 JSON -->
	<bean id="stringConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>


	<!-- 配置freeMarker -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />

	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/template/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">1</prop>
				<!-- freemarker 编译模版文件时使用的字符格式 -->
				<prop key="defaultEncoding">UTF-8</prop>
				<prop key="classic_compatible">true</prop>
				<!-- 小数最多显示6位  -->
				<prop key="number_format">0.######</prop>
			</props>
		</property>
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
			</map>
		</property>
	</bean>

	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<!-- freemarker 显示模版文件时使用的字符格式 -->
		<property name="contentType" value="text/html; charset=UTF-8" />
		<property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".html" />
		<!--在模版页面中获取request对象 -->
		<property name="requestContextAttribute" value="request" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		
	</bean>

	<!--============================撮合系统数据库开始============================ -->
	<bean id="dataSource_1" class="org.apache.tomcat.jdbc.pool.DataSource" >
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="#{ch.url}" />
		<property name="username" value="#{ch.username}"/>
		<property name="password" value="#{ch.password}"/>
		<!-- 设置连接池建立时连接的数目 -->
		<property name="initialSize" value="10"/>
		<property name="maxIdle" value="50"/>
		<!-- 连接池中存在的最小连接数目 -->
		<property name="minIdle" value="10"/>
		<!-- 连接数据库的最大连接数 -->
		<property name="maxActive" value="100"/>
		<property name="suspectTimeout" value="60"/>
		<property name="timeBetweenEvictionRunsMillis" value="30000"/>
		<property name="minEvictableIdleTimeMillis" value="60000"/>
	</bean>



	<bean id="sqlSessionFactory_1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource_1" />
		<!-- mybatis配置文件加载 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 映射文件集合 -->
		<property name="mapperLocations" value="classpath:mapper/**/*.xml" />
		<!--自动加载实体类 -->
		<property name="typeAliasesPackage" value="com.smm.cuohe.domain" />
		
		<property name="configurationProperties">
			<props>
				<prop key="cacheEnabled">true</prop> 
				<!-- 查询时，关闭关联对象即时加载以提高性能 -->
				<prop key="lazyLoadingEnabled">true</prop>
				 <!-- 设置关联对象加载的形态，此处为按需加载字段(加载字段由SQL指定)，不会加载关联表的所有字段，以提高性能 -->
				 <prop key="aggressiveLazyLoading">false</prop>
				 <!-- 对于未知的SQL查询，允许返回不同的结果集以达到通用的效果 -->  
				 <prop key="multipleResultSetsEnabled">true</prop>
				 <!-- 允许使用列标签代替列名 -->  
				 <prop key="useColumnLabel">true</prop>
                <!-- 允许使用自定义的主键值(比如由程序生成的UUID 32位编码作为键值)，数据表的PK生成策略将被覆盖 -->  
                <prop key="useGeneratedKeys">true</prop>
                <!-- 给予被嵌套的resultMap以字段-属性的映射支持 -->  
                <prop key="autoMappingBehavior">FULL</prop>
                <!-- 对于批量更新操作缓存SQL以提高性能  -->  
                <prop key="defaultExecutorType">BATCH</prop>
                <!-- 数据库超过25000秒仍未响应则超时 -->  
                <prop key="defaultStatementTimeout">25000</prop>
			</props>
		</property>
		
		
	</bean>
	<!--配置自动扫描mapper文件 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_1" />
		<property name="basePackage" value="com.smm.cuohe.dao" />
	</bean>

	<!--配置事物管理 -->
	<bean id="transactionManager_1"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource_1" />
		<qualifier value="cuohe" />
	</bean>

	<!-- 全注解方式 需加上@Transactional("cuohe") -->
	<tx:annotation-driven transaction-manager="transactionManager_1" />
	<!--============================撮合系统数据源结束============================ -->

	

	<!-- 验证码配置 -->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.border.color">105,179,90</prop>
						<prop key="kaptcha.textproducer.font.color">red</prop>
						<!-- <prop key="kaptcha.image.width">125</prop> -->
						<!-- <prop key="kaptcha.image.height">45</prop> -->
						<!-- <prop key="kaptcha.textproducer.font.size">45</prop> -->
						<prop key="kaptcha.session.key">code</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate"></bean>
	
	<!-- 文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
  		 <property name="defaultEncoding" value="utf-8" />
      	 <property name="maxUploadSize" value="10485760000" />
      	 <property name="maxInMemorySize" value="40960" />
     </bean>
     
      
      
</beans>